{"ast":null,"code":"var json = require('../../db.json');\n\nvar MongoClient = require('mongodb').MongoClient;\n\nvar url = \"mongodb://nextjsblogmongodb:ClGsjorJejusqGsF4C0948FffuvW4KLZnGE2rPbG7gC0ZesqsLtTGPGj2ibdVJtZDPok18TOV6wigu3q9L3Isg==@nextjsblogmongodb.mongo.cosmos.azure.com:10255/?ssl=true&appName=@nextjsblogmongodb@\";\nvar POSTS = json.posts;\n\nclass PostService {\n  async GetAll() {\n    console.log(\"Çalıştı\");\n    MongoClient.connect(url, function (err, db) {\n      if (err) throw err;\n      var dbo = db.db(\"blog\");\n      var myobj = {\n        title: \"Company Inc\",\n        description: \"Highway 37\",\n        date: \"asd\",\n        id: 51\n      };\n      dbo.collection(\"customers\").insertOne(myobj, function (err, res) {\n        if (err) throw err;\n        console.log(\"1 document inserted\");\n        db.close();\n      });\n    });\n    return POSTS;\n  }\n\n  async Add(post) {\n    post.date = new Date().toString();\n    post.id = Math.floor(Math.random() * 100000);\n    POSTS.push(post);\n    console.log(POSTS);\n  }\n\n  async Delete(id) {\n    POSTS.forEach((item, index) => {\n      if (id != item.id) {\n        delete POSTS[index];\n      }\n    });\n  }\n\n}\n\nexport default new PostService();","map":{"version":3,"sources":["C:/Users/iko_k/Desktop/Projeler/nextjs/nextjs-blog/Source/Services/PostService.js"],"names":["json","require","MongoClient","url","POSTS","posts","PostService","GetAll","console","log","connect","err","db","dbo","myobj","title","description","date","id","collection","insertOne","res","close","Add","post","Date","toString","Math","floor","random","push","Delete","forEach","item","index"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,eAAD,CAAlB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,SAAD,CAAP,CAAmBC,WAArC;;AACA,IAAIC,GAAG,GAAG,2MAAV;AAEA,IAAIC,KAAK,GAAGJ,IAAI,CAACK,KAAjB;;AACA,MAAMC,WAAN,CAAkB;AACd,QAAMC,MAAN,GAAe;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAP,IAAAA,WAAW,CAACQ,OAAZ,CAAoBP,GAApB,EAAyB,UAAUQ,GAAV,EAAeC,EAAf,EAAmB;AACxC,UAAID,GAAJ,EAAS,MAAMA,GAAN;AACT,UAAIE,GAAG,GAAGD,EAAE,CAACA,EAAH,CAAM,MAAN,CAAV;AACA,UAAIE,KAAK,GAAG;AAAEC,QAAAA,KAAK,EAAE,aAAT;AAAwBC,QAAAA,WAAW,EAAE,YAArC;AAAmDC,QAAAA,IAAI,EAAC,KAAxD;AAA8DC,QAAAA,EAAE,EAAC;AAAjE,OAAZ;AACAL,MAAAA,GAAG,CAACM,UAAJ,CAAe,WAAf,EAA4BC,SAA5B,CAAsCN,KAAtC,EAA6C,UAAUH,GAAV,EAAeU,GAAf,EAAoB;AAC7D,YAAIV,GAAJ,EAAS,MAAMA,GAAN;AACTH,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAG,QAAAA,EAAE,CAACU,KAAH;AACH,OAJD;AAKH,KATD;AAWA,WAAOlB,KAAP;AACH;;AAED,QAAMmB,GAAN,CAAUC,IAAV,EAAgB;AACZA,IAAAA,IAAI,CAACP,IAAL,GAAY,IAAIQ,IAAJ,GAAWC,QAAX,EAAZ;AACAF,IAAAA,IAAI,CAACN,EAAL,GAAUS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,CAAV;AACAzB,IAAAA,KAAK,CAAC0B,IAAN,CAAWN,IAAX;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACH;;AAED,QAAM2B,MAAN,CAAab,EAAb,EAAiB;AACbd,IAAAA,KAAK,CAAC4B,OAAN,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3B,UAAIhB,EAAE,IAAIe,IAAI,CAACf,EAAf,EAAmB;AACf,eAAOd,KAAK,CAAC8B,KAAD,CAAZ;AACH;AACJ,KAJD;AAOH;;AAhCa;;AAmClB,eAAe,IAAI5B,WAAJ,EAAf","sourcesContent":["var json = require('../../db.json');\r\nvar MongoClient = require('mongodb').MongoClient;\r\nvar url = \"mongodb://nextjsblogmongodb:ClGsjorJejusqGsF4C0948FffuvW4KLZnGE2rPbG7gC0ZesqsLtTGPGj2ibdVJtZDPok18TOV6wigu3q9L3Isg==@nextjsblogmongodb.mongo.cosmos.azure.com:10255/?ssl=true&appName=@nextjsblogmongodb@\";\r\n\r\nvar POSTS = json.posts\r\nclass PostService {\r\n    async GetAll() {\r\n        console.log(\"Çalıştı\")\r\n        MongoClient.connect(url, function (err, db) {\r\n            if (err) throw err;\r\n            var dbo = db.db(\"blog\");\r\n            var myobj = { title: \"Company Inc\", description: \"Highway 37\" ,date:\"asd\",id:51};\r\n            dbo.collection(\"customers\").insertOne(myobj, function (err, res) {\r\n                if (err) throw err;\r\n                console.log(\"1 document inserted\");\r\n                db.close();\r\n            });\r\n        });\r\n\r\n        return POSTS;\r\n    }\r\n\r\n    async Add(post) {\r\n        post.date = new Date().toString();\r\n        post.id = Math.floor(Math.random() * 100000);\r\n        POSTS.push(post);\r\n        console.log(POSTS)\r\n    }\r\n\r\n    async Delete(id) {\r\n        POSTS.forEach((item, index) => {\r\n            if (id != item.id) {\r\n                delete POSTS[index]\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default new PostService();"]},"metadata":{},"sourceType":"module"}