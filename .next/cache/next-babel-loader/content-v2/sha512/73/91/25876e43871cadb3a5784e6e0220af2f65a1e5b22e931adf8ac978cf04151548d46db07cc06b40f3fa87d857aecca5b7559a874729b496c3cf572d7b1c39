{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\iko_k\\\\Desktop\\\\Projeler\\\\nextjs\\\\nextjs-blog\\\\Source\\\\Components\\\\Chart.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Card from '@material-ui/core/Card';\nimport { ArgumentAxis, ValueAxis, Chart, LineSeries } from '@devexpress/dx-react-chart-material-ui';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nvar DataChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(DataChart, _React$Component);\n\n  var _super = _createSuper(DataChart);\n\n  function DataChart() {\n    _classCallCheck(this, DataChart);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DataChart, [{\n    key: \"render\",\n    value: function render() {\n      var data = [];\n      var i;\n\n      for (i = 0; i < 20; i++) {\n        data.push({\n          argument: i,\n          value: Math.floor(Math.random() * 100)\n        });\n      }\n\n      return /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: \"Grafik\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            data: data,\n            width: 300,\n            height: 300,\n            children: [/*#__PURE__*/_jsxDEV(ArgumentAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ValueAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n              valueField: \"value\",\n              argumentField: \"argument\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return DataChart;\n}(React.Component);\n\nexport { DataChart as default };","map":{"version":3,"sources":["C:/Users/iko_k/Desktop/Projeler/nextjs/nextjs-blog/Source/Components/Chart.js"],"names":["React","Component","Card","ArgumentAxis","ValueAxis","Chart","LineSeries","CardHeader","CardContent","Typography","DataChart","data","i","push","argument","value","Math","floor","random","display","justifyContent","alignItems"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SACIC,YADJ,EAEIC,SAFJ,EAGIC,KAHJ,EAIIC,UAJJ,QAKO,wCALP;AAMA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;IAGqBC,S;;;;;;;;;;;;;6BAER;AACL,UAAMC,IAAI,GAAG,EAAb;AAGA,UAAIC,CAAJ;;AACA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACrBD,QAAAA,IAAI,CAACE,IAAL,CAAU;AAAEC,UAAAA,QAAQ,EAAEF,CAAZ;AAAeG,UAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B;AAAtB,SAAV;AACH;;AACD,0BACI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AACTC,UAAAA,OAAO,EAAE,MADA;AAETC,UAAAA,cAAc,EAAE,QAFP;AAGTC,UAAAA,UAAU,EAAE;AAHH,SAAb;AAAA,gCAKI,QAAC,UAAD;AAGI,UAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,gBALJ,eAWI,QAAC,WAAD;AAAA,iCACI,QAAC,KAAD;AACI,YAAA,IAAI,EAAEV,IADV;AAEI,YAAA,KAAK,EAAE,GAFX;AAGI,YAAA,MAAM,EAAE,GAHZ;AAAA,oCAKI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI,QAAC,UAAD;AAAY,cAAA,UAAU,EAAC,OAAvB;AAA+B,cAAA,aAAa,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAyBH;;;;EAnCkCX,KAAK,CAACC,S;;SAAxBS,S","sourcesContent":["import React, { Component } from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport {\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n    Chart,\r\n    LineSeries,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nexport default class DataChart extends React.Component {\r\n\r\n    render() {\r\n        const data = [\r\n\r\n        ];\r\n        var i;\r\n        for (i = 0; i < 20; i++) {\r\n            data.push({ argument: i, value: Math.floor(Math.random() * 100) })\r\n        }\r\n        return (\r\n            <Card style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\"\r\n            }}>\r\n                <CardHeader\r\n\r\n\r\n                    title=\"Grafik\"\r\n\r\n                />\r\n                <CardContent>\r\n                    <Chart\r\n                        data={data}\r\n                        width={300}\r\n                        height={300}\r\n                    >\r\n                        <ArgumentAxis />\r\n                        <ValueAxis />\r\n                        <LineSeries valueField=\"value\" argumentField=\"argument\" />\r\n                    </Chart>\r\n                </CardContent>\r\n            </Card >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}