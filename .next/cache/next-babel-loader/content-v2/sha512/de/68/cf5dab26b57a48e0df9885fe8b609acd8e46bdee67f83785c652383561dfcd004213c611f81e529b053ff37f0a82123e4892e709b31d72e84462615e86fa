{"ast":null,"code":"var json = require('../../db.json');\n\nimport axios from \"axios\";\nimport { URL } from \"./_config\";\nvar POSTS = json.posts;\n\nclass PostService {\n  async GetAll() {\n    return axios.get(URL + \"posts\");\n  }\n\n  async Add(post) {\n    post.date = new Date().toString();\n    post.id = Math.floor(Math.random() * 100000);\n    POSTS.push(post);\n    console.log(POSTS);\n  }\n\n  async Delete(id) {\n    POSTS.forEach((item, index) => {\n      if (id != item.id) {\n        delete POSTS[index];\n      }\n    });\n  }\n\n}\n\nexport default new PostService();","map":{"version":3,"sources":["C:/Users/iko_k/Desktop/Projeler/nextjs/nextjs-blog/Source/Services/PostService.js"],"names":["json","require","axios","URL","POSTS","posts","PostService","GetAll","get","Add","post","date","Date","toString","id","Math","floor","random","push","console","log","Delete","forEach","item","index"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,eAAD,CAAlB;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,IAAIC,KAAK,GAAGJ,IAAI,CAACK,KAAjB;;AACA,MAAMC,WAAN,CAAkB;AACd,QAAMC,MAAN,GAAe;AACX,WAAOL,KAAK,CAACM,GAAN,CAAUL,GAAG,GAAG,OAAhB,CAAP;AAEH;;AAED,QAAMM,GAAN,CAAUC,IAAV,EAAgB;AACZA,IAAAA,IAAI,CAACC,IAAL,GAAY,IAAIC,IAAJ,GAAWC,QAAX,EAAZ;AACAH,IAAAA,IAAI,CAACI,EAAL,GAAUC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,CAAV;AACAb,IAAAA,KAAK,CAACc,IAAN,CAAWR,IAAX;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AACH;;AAED,QAAMiB,MAAN,CAAaP,EAAb,EAAiB;AACbV,IAAAA,KAAK,CAACkB,OAAN,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3B,UAAIV,EAAE,IAAIS,IAAI,CAACT,EAAf,EAAmB;AACf,eAAOV,KAAK,CAACoB,KAAD,CAAZ;AACH;AACJ,KAJD;AAOH;;AArBa;;AAwBlB,eAAe,IAAIlB,WAAJ,EAAf","sourcesContent":["var json = require('../../db.json');\r\nimport axios from \"axios\";\r\nimport { URL } from \"./_config\";\r\n\r\nvar POSTS = json.posts\r\nclass PostService {\r\n    async GetAll() {\r\n        return axios.get(URL + \"posts\");\r\n\r\n    }\r\n\r\n    async Add(post) {\r\n        post.date = new Date().toString();\r\n        post.id = Math.floor(Math.random() * 100000);\r\n        POSTS.push(post);\r\n        console.log(POSTS)\r\n    }\r\n\r\n    async Delete(id) {\r\n        POSTS.forEach((item, index) => {\r\n            if (id != item.id) {\r\n                delete POSTS[index]\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default new PostService();"]},"metadata":{},"sourceType":"module"}