{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\iko_k\\\\Desktop\\\\Projeler\\\\nextjs\\\\nextjs-blog\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport '../styles/globals.css';\nimport Router from 'next/router';\nimport mongoose from 'mongoose';\nvar connection = {};\n\nfunction MyApp(_x) {\n  return _MyApp.apply(this, arguments);\n}\n\n_c2 = MyApp;\n\nfunction _MyApp() {\n  _MyApp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var Component, pageProps, db;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Component = _ref.Component, pageProps = _ref.pageProps;\n            console.log(\"_app\");\n            _context.next = 4;\n            return mongoose.connect(process.env.MONGO_URI, {\n              useNewUrlParser: true,\n              useUnifiedTopology: true\n            });\n\n          case 4:\n            db = _context.sent;\n            connection.isConnected = db.connections[0].readyState;\n            console.log(\"asdasd   \" + connection.isConnected);\n            return _context.abrupt(\"return\", /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 10\n            }, this));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _MyApp.apply(this, arguments);\n}\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyApp\");\n$RefreshReg$(_c2, \"MyApp\");","map":{"version":3,"sources":["C:/Users/iko_k/Desktop/Projeler/nextjs/nextjs-blog/pages/_app.js"],"names":["Router","mongoose","connection","MyApp","Component","pageProps","console","log","connect","process","env","MONGO_URI","useNewUrlParser","useUnifiedTopology","db","isConnected","connections","readyState"],"mappings":";;;;;;;;;;AAAA,OAAO,uBAAP;AACA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,IAAMC,UAAU,GAAG,EAAnB;;SAEeC,K;;;;MAAAA,K;;;oEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBC,YAAAA,SAAvB,QAAuBA,SAAvB,EAAkCC,SAAlC,QAAkCA,SAAlC;AACEC,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AADF;AAAA,mBAImBN,QAAQ,CAACO,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B,EAAwC;AACvDC,cAAAA,eAAe,EAAE,IADsC;AAEvDC,cAAAA,kBAAkB,EAAE;AAFmC,aAAxC,CAJnB;;AAAA;AAIQC,YAAAA,EAJR;AASEZ,YAAAA,UAAU,CAACa,WAAX,GAAyBD,EAAE,CAACE,WAAH,CAAe,CAAf,EAAkBC,UAA3C;AACAX,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAcL,UAAU,CAACa,WAArC;AAVF,0DAYS,QAAC,SAAD,oBAAeV,SAAf;AAAA;AAAA;AAAA;AAAA,oBAZT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;KAAeF,K;AAef,eAAeA,KAAf","sourcesContent":["import '../styles/globals.css'\nimport Router from 'next/router'\nimport mongoose from 'mongoose';\n\nconst connection = {};\n\nasync function MyApp({ Component, pageProps }) {\n  console.log(\"_app\")\n \n\n  const db = await mongoose.connect(process.env.MONGO_URI, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n  });\n\n  connection.isConnected = db.connections[0].readyState;\n  console.log(\"asdasd   \" + connection.isConnected)\n\n  return <Component {...pageProps} />\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}