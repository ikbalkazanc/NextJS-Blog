{"ast":null,"code":"var json = require('../../db.json');\n\nimport mongose from 'mongoose';\nconst connection = {};\nvar POSTS = json.posts;\n\nclass PostService {\n  async GetAll() {\n    console.log(\"Çalıştı\");\n\n    if (connection.isConnected) {\n      return;\n    }\n\n    const db = await mongoose.connect(process.env.MONGO_URI, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true\n    });\n    connection.isConnected = db.connections[0].readyState;\n    console.log(\"bağalı : \" + connection.isConnected);\n    return POSTS;\n  }\n\n  async Add(post) {\n    post.date = new Date().toString();\n    post.id = Math.floor(Math.random() * 100000);\n    POSTS.push(post);\n    console.log(POSTS);\n  }\n\n  async Delete(id) {\n    POSTS.forEach((item, index) => {\n      if (id != item.id) {\n        delete POSTS[index];\n      }\n    });\n  }\n\n}\n\nexport default new PostService();","map":{"version":3,"sources":["C:/Users/iko_k/Desktop/Projeler/nextjs/nextjs-blog/Source/Services/PostService.js"],"names":["json","require","mongose","connection","POSTS","posts","PostService","GetAll","console","log","isConnected","db","mongoose","connect","process","env","MONGO_URI","useNewUrlParser","useUnifiedTopology","connections","readyState","Add","post","date","Date","toString","id","Math","floor","random","push","Delete","forEach","item","index"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,eAAD,CAAlB;;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,MAAMC,UAAU,GAAG,EAAnB;AAEA,IAAIC,KAAK,GAAGJ,IAAI,CAACK,KAAjB;;AACA,MAAMC,WAAN,CAAkB;AACd,QAAMC,MAAN,GAAe;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACA,QAAIN,UAAU,CAACO,WAAf,EAA4B;AACxB;AACH;;AAED,UAAMC,EAAE,GAAG,MAAMC,QAAQ,CAACC,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B,EAAwC;AACrDC,MAAAA,eAAe,EAAE,IADoC;AAErDC,MAAAA,kBAAkB,EAAE;AAFiC,KAAxC,CAAjB;AAKAf,IAAAA,UAAU,CAACO,WAAX,GAAyBC,EAAE,CAACQ,WAAH,CAAe,CAAf,EAAkBC,UAA3C;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcN,UAAU,CAACO,WAArC;AACA,WAAON,KAAP;AACH;;AAED,QAAMiB,GAAN,CAAUC,IAAV,EAAgB;AACZA,IAAAA,IAAI,CAACC,IAAL,GAAY,IAAIC,IAAJ,GAAWC,QAAX,EAAZ;AACAH,IAAAA,IAAI,CAACI,EAAL,GAAUC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,CAAV;AACAzB,IAAAA,KAAK,CAAC0B,IAAN,CAAWR,IAAX;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACH;;AAED,QAAM2B,MAAN,CAAaL,EAAb,EAAiB;AACbtB,IAAAA,KAAK,CAAC4B,OAAN,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3B,UAAIR,EAAE,IAAIO,IAAI,CAACP,EAAf,EAAmB;AACf,eAAOtB,KAAK,CAAC8B,KAAD,CAAZ;AACH;AACJ,KAJD;AAOH;;AAhCa;;AAmClB,eAAe,IAAI5B,WAAJ,EAAf","sourcesContent":["var json = require('../../db.json');\r\nimport mongose from 'mongoose'\r\nconst connection = {};\r\n\r\nvar POSTS = json.posts\r\nclass PostService {\r\n    async GetAll() {\r\n        console.log(\"Çalıştı\")\r\n        if (connection.isConnected) {\r\n            return;\r\n        }\r\n    \r\n        const db = await mongoose.connect(process.env.MONGO_URI, {\r\n            useNewUrlParser: true,\r\n            useUnifiedTopology: true,\r\n        });\r\n    \r\n        connection.isConnected = db.connections[0].readyState;\r\n        console.log(\"bağalı : \" + connection.isConnected)\r\n        return POSTS;\r\n    }\r\n\r\n    async Add(post) {\r\n        post.date = new Date().toString();\r\n        post.id = Math.floor(Math.random() * 100000);\r\n        POSTS.push(post);\r\n        console.log(POSTS)\r\n    }\r\n\r\n    async Delete(id) {\r\n        POSTS.forEach((item, index) => {\r\n            if (id != item.id) {\r\n                delete POSTS[index]\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default new PostService();"]},"metadata":{},"sourceType":"module"}