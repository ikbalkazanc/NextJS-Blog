{"ast":null,"code":"import nextConnect from 'next-connect';\nimport AuthenticationMiddleware from \"../../../Source/Middlewares/AuthenticationMiddleware\";\nimport PostService from '../../../source/services/PostService';\nexport default nextConnect().use((req, res, next) => {\n  console.log(\"custom middleware\");\n  next();\n}).use(AuthenticationMiddleware).get(async (req, res) => {\n  var posts = await PostService.GetAll();\n  res.statusCode = 200;\n  res.json(posts);\n}).post(async (req, res) => {\n  res.statusCode = 200;\n  var post = await PostService.Add(req.body);\n  res.json(post);\n}).delete(async (req, res) => {\n  console.log(req.body.id);\n\n  if (req.body.id == undefined) {\n    res.statusCode = 400;\n  } else {\n    res.statusCode = 200;\n    await PostService.Delete(req.body.id);\n  }\n\n  res.end();\n});","map":{"version":3,"sources":["C:/Users/iko_k/Desktop/projects/NextJS/NextJS-BlogPage/pages/api/post/index.ts"],"names":["nextConnect","AuthenticationMiddleware","PostService","use","req","res","next","console","log","get","posts","GetAll","statusCode","json","post","Add","body","delete","id","undefined","Delete","end"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AAEA,OAAOC,wBAAP,MAAqC,sDAArC;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AAEA,eAAeF,WAAW,GAErBG,GAFU,CAE2B,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACtDC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAF,EAAAA,IAAI;AACP,CALU,EAOVH,GAPU,CAO2BF,wBAP3B,EASVQ,GATU,CASN,OAAOL,GAAP,EAAYC,GAAZ,KAAoB;AACrB,MAAIK,KAAK,GAAG,MAAMR,WAAW,CAACS,MAAZ,EAAlB;AACAN,EAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACAP,EAAAA,GAAG,CAACQ,IAAJ,CAASH,KAAT;AAEH,CAdU,EAgBVI,IAhBU,CAgBL,OAAOV,GAAP,EAAYC,GAAZ,KAAoB;AACtBA,EAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACA,MAAIE,IAAI,GAAG,MAAMZ,WAAW,CAACa,GAAZ,CAAgBX,GAAG,CAACY,IAApB,CAAjB;AACAX,EAAAA,GAAG,CAACQ,IAAJ,CAASC,IAAT;AAEH,CArBU,EAuBVG,MAvBU,CAuBH,OAAOb,GAAP,EAAYC,GAAZ,KAAoB;AACxBE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACY,IAAJ,CAASE,EAArB;;AACA,MAAId,GAAG,CAACY,IAAJ,CAASE,EAAT,IAAeC,SAAnB,EAA8B;AAC1Bd,IAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACH,GAFD,MAGK;AACDP,IAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACA,UAAMV,WAAW,CAACkB,MAAZ,CAAmBhB,GAAG,CAACY,IAAJ,CAASE,EAA5B,CAAN;AACH;;AACDb,EAAAA,GAAG,CAACgB,GAAJ;AACH,CAjCU,CAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nimport next, { NextApiRequest, NextApiResponse } from 'next'\r\nimport AuthenticationMiddleware from \"../../../Source/Middlewares/AuthenticationMiddleware\"\r\nimport PostService from '../../../source/services/PostService'\r\n\r\nexport default nextConnect<NextApiRequest, NextApiResponse>()\r\n\r\n    .use<NextApiRequest, NextApiResponse>((req, res, next) => {\r\n        console.log(\"custom middleware\")\r\n        next();\r\n    })\r\n\r\n    .use<NextApiRequest, NextApiResponse>(AuthenticationMiddleware)\r\n\r\n    .get(async (req, res) => {\r\n        var posts = await PostService.GetAll();\r\n        res.statusCode = 200\r\n        res.json(posts)\r\n\r\n    })\r\n\r\n    .post(async (req, res) => {\r\n        res.statusCode = 200\r\n        var post = await PostService.Add(req.body);\r\n        res.json(post)\r\n\r\n    })\r\n    \r\n    .delete(async (req, res) => {\r\n        console.log(req.body.id)\r\n        if (req.body.id == undefined) {\r\n            res.statusCode = 400         \r\n        }\r\n        else {\r\n            res.statusCode = 200\r\n            await PostService.Delete(req.body.id);\r\n        }\r\n        res.end();\r\n    });\r\n\r\n"]},"metadata":{},"sourceType":"module"}